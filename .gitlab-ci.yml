# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

default:
  tags:
    - spinalhdl

# List of stages for jobs, and their order of execution, these run sequential
stages:
  - build
  - test
  - deploy

# This job runs in the build stage, which runs first.
build-job:
  stage: build
  script:
    - echo "Building..."
    - mv build.sbt build.sbt.orig
    # Switch to the release version of SpinalHDL.
    # @TODO This should be default in SpinalCorundum.
    # Developers should switch locally to a non-release
    # build of SpinalHDL in the future (after PoC?)
    - cp -a release-build.sbt build.sbt
    - git config --global --add safe.directory $PWD
    - make
    - echo "Build complete."

# Multiple jobs within same stage run in parallel
unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests (fake, to implement)... This will take about 5 seconds."
    - sleep 5
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code (fake)... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."